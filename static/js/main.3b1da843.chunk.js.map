{"version":3,"sources":["App.tsx","components/GoodCard.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodCard","good","GoodsList","goods","map","goodsFromServer","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","preparedGoods","sort","good1","good2","SortByName","localeCompare","SortByLength","length","reverse","getPreparedGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0DCbQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAqBA,KAAMA,GAAZA,SFJRI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,kBAAAA,E,uBAAAA,M,KAiCE,IAAMO,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA/BR,SACET,EADF,GAGG,IADCK,EACF,EADEA,UAAWE,EACb,EADaA,SAETG,EAAa,YAAOV,GAqBxB,OAnBIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKT,EAAOkB,WACV,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAAOoB,aACV,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,IACFG,EAAgBA,EAAcQ,WAGzBR,EAMcS,CACnBjB,EAAiB,CAAEG,YAAWE,aAQhC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaV,EAAOkB,aACnCM,UAAWf,IAAcT,EAAOkB,WAC5B,iBACA,0BALN,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMhB,EAAaV,EAAOoB,eACnCI,UAAWf,IAAcT,EAAOoB,aAC5B,oBACA,6BALN,4BAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMd,GAAaD,IAC5Ba,UAAWb,EACP,oBACA,6BALN,sBAUEF,GAAaE,IACb,wBACEc,KAAK,SACLC,QAzCI,WACZd,GAAY,GACZF,EAAa,KAwCLc,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWpB,MAAOS,QGzGxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b1da843.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { FilterParams } from './types/FilterParams';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  SortByName = 'name',\n  SortByLength = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reversed }: FilterParams,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortBy.SortByName:\n          return good1.localeCompare(good2);\n\n        case SortBy.SortByLength:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n\n  const reset = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortBy.SortByName)}\n          className={sortField === SortBy.SortByName\n            ? 'button is-info'\n            : 'button is-info is-light'}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortBy.SortByLength)}\n          className={sortField === SortBy.SortByLength\n            ? 'button is-success'\n            : 'button is-success is-light'}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReversed(!reversed)}\n          className={reversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const GoodCard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { GoodCard } from './GoodCard';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard key={good} good={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}